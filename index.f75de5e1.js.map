{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\nconst rows = Array.from(tbody.querySelectorAll('tr'));\n\nlet lastSortedColumn = null;\nlet selectedRowIndex = null;\nlet isDescending = false;\n\nconst convertToNumber = (str) => {\n  if (typeof str === 'string') {\n    return Number(str.replace(/[^0-9.-]+/g, ''));\n  }\n  return NaN;\n};\n\nconst sortTable = (columnIndex, DESC) => {\n  return [...rows].sort((a, b) => {\n    const aValue = a.children[columnIndex].textContent.trim();\n    const bValue = b.children[columnIndex].textContent.trim();\n    let comparison;\n\n    if (columnIndex === 3 || columnIndex === 4) {\n      comparison = convertToNumber(aValue) - convertToNumber(bValue);\n    } else {\n      comparison = aValue.localeCompare(bValue);\n    }\n\n    return DESC ? -comparison : comparison;\n  });\n};\n\nconst upDateTable = (sortedRows) => {\n  tbody.innerHTML = '';\n  sortedRows.forEach((row) => tbody.appendChild(row));\n};\n\nconst setRowSelected = (rowIndex) => {\n  rows.forEach((row, index) => {\n    row.classList.toggle('active', index === rowIndex);\n  });\n};\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    if (lastSortedColumn === index) {\n      isDescending = !isDescending;\n    } else {\n      lastSortedColumn = index;\n      isDescending = false;\n    }\n\n    const sortedRows = sortTable(index, isDescending);\n    upDateTable(sortedRows);\n  });\n});\n\nrows.forEach((row, index) => {\n  row.addEventListener('click', () => {\n    selectedRowIndex = selectedRowIndex === index ? null : index;\n    setRowSelected(selectedRowIndex);\n  });\n});\n\nconst pushNotification = (title, description, type) => {\n  const existingNotification = document.querySelector('[data-qa=\"notification\"]');\n  if (existingNotification) {\n    existingNotification.remove();\n  }\n\n  const notification = document.createElement('div');\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  const titleElement = document.createElement('h2');\n  titleElement.classList.add('title');\n  titleElement.textContent = title;\n  notification.appendChild(titleElement);\n\n  const descriptionElement = document.createElement('p');\n  descriptionElement.textContent = description;\n  notification.appendChild(descriptionElement);\n\n  document.body.appendChild(notification);\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n\nconst validatePosition = (position) => {\n  if (!position || !position.trim() || /\\d/.test(position) || position.trim().length < 2) {\n    return false;\n  }\n  return true;\n};\n\nconst formFields = {\n  name: {\n    label: 'Name:',\n    type: 'text',\n    qa: 'name',\n    required: true,\n  },\n  position: {\n    label: 'Position:',\n    type: 'text',\n    qa: 'position',\n    required: true,\n  },\n  office: {\n    label: 'Office:',\n    type: 'select',\n    qa: 'office',\n    required: true,\n    options: ['Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco'],\n  },\n  age: {\n    label: 'Age:',\n    type: 'number',\n    qa: 'age',\n    required: true,\n  },\n  salary: {\n    label: 'Salary:',\n    type: 'number',\n    qa: 'salary',\n    required: true,\n  },\n};\n\nconst form = document.createElement('form');\nform.className = 'new-employee-form';\n\nfor (const field in formFields) {\n  const fieldConfig = formFields[field];\n  const label = document.createElement('label');\n  label.textContent = fieldConfig.label;\n\n  let input;\n\n  if (fieldConfig.type === 'select') {\n    input = document.createElement('select');\n    fieldConfig.options.forEach((optionValue) => {\n      const option = document.createElement('option');\n      option.value = optionValue;\n      option.textContent = optionValue;\n      input.appendChild(option);\n    });\n  } else {\n    input = document.createElement('input');\n    input.type = fieldConfig.type;\n  }\n\n  input.name = field;\n  input.setAttribute('data-qa', fieldConfig.qa);\n  label.appendChild(input);\n  form.appendChild(label);\n}\n\nconst submitBtn = document.createElement('button');\nsubmitBtn.type = 'submit';\nsubmitBtn.textContent = 'Save to table';\nform.appendChild(submitBtn);\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formData = {};\n  for (const field in formFields) {\n    formData[field] = form.querySelector(`[name=\"${field}\"]`).value.trim();\n  }\n\n  if (\n    !formData.name ||\n    !formData.position ||\n    !formData.office ||\n    !formData.age ||\n    !formData.salary\n  ) {\n    pushNotification('Error', 'All fields are required', 'error');\n    return;\n  }\n\n  if (formData.name.length < 4) {\n    pushNotification('Error', 'Name must be at least 4 characters long', 'error');\n    return;\n  }\n\n  if (!validatePosition(formData.position)) {\n    pushNotification('Error', 'Position must be at least 2 characters long and cannot contain numbers', 'error');\n    return;\n  }\n\n  const ageValue = Number(formData.age);\n  if (ageValue < 18 || ageValue > 90) {\n    pushNotification('Error', 'Age must be between 18 and 90', 'error');\n    return;\n  }\n\n  const salaryValue = Number(formData.salary);\n  const newEmployeeData = {\n    name: formData.name,\n    position: formData.position,\n    office: formData.office,\n    age: ageValue,\n    salary: `$${salaryValue.toLocaleString('en-US')}`,\n  };\n\n  const newRow = tbody.insertRow();\n  for (const data in newEmployeeData) {\n    const newCell = newRow.insertCell();\n    newCell.textContent = newEmployeeData[data];\n  }\n\n  pushNotification('Success', 'Employee added to the table', 'success');\n  form.reset();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}